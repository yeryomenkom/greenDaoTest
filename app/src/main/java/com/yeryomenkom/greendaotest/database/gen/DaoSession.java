package com.yeryomenkom.greendaotest.database.gen;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.yeryomenkom.greendaotest.database.gen.DbAnimal;
import com.yeryomenkom.greendaotest.database.gen.DbLeg;
import com.yeryomenkom.greendaotest.database.gen.DbHead;

import com.yeryomenkom.greendaotest.database.gen.DbAnimalDao;
import com.yeryomenkom.greendaotest.database.gen.DbLegDao;
import com.yeryomenkom.greendaotest.database.gen.DbHeadDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dbAnimalDaoConfig;
    private final DaoConfig dbLegDaoConfig;
    private final DaoConfig dbHeadDaoConfig;

    private final DbAnimalDao dbAnimalDao;
    private final DbLegDao dbLegDao;
    private final DbHeadDao dbHeadDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dbAnimalDaoConfig = daoConfigMap.get(DbAnimalDao.class).clone();
        dbAnimalDaoConfig.initIdentityScope(type);

        dbLegDaoConfig = daoConfigMap.get(DbLegDao.class).clone();
        dbLegDaoConfig.initIdentityScope(type);

        dbHeadDaoConfig = daoConfigMap.get(DbHeadDao.class).clone();
        dbHeadDaoConfig.initIdentityScope(type);

        dbAnimalDao = new DbAnimalDao(dbAnimalDaoConfig, this);
        dbLegDao = new DbLegDao(dbLegDaoConfig, this);
        dbHeadDao = new DbHeadDao(dbHeadDaoConfig, this);

        registerDao(DbAnimal.class, dbAnimalDao);
        registerDao(DbLeg.class, dbLegDao);
        registerDao(DbHead.class, dbHeadDao);
    }
    
    public void clear() {
        dbAnimalDaoConfig.getIdentityScope().clear();
        dbLegDaoConfig.getIdentityScope().clear();
        dbHeadDaoConfig.getIdentityScope().clear();
    }

    public DbAnimalDao getDbAnimalDao() {
        return dbAnimalDao;
    }

    public DbLegDao getDbLegDao() {
        return dbLegDao;
    }

    public DbHeadDao getDbHeadDao() {
        return dbHeadDao;
    }

}
